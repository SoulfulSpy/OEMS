{
  "info": {
    "_postman_id": "b2c3d4e5-f6g7-8901-bcde-fg2345678901",
    "name": "OEMS APIs Complete Collection",
    "description": "Complete API collection for OEMS - Ride Booking Platform with Multi-Admin System\n\nBase URL: http://localhost:8080\n\nThis collection includes:\n🔐 Authentication APIs (5 endpoints)\n🚗 Ride Management APIs (4 endpoints)\n🚙 Driver APIs (17 endpoints)\n🏢 Showroom Admin APIs (11 endpoints)\n👑 Super Admin APIs (15 endpoints)\n🔧 Driver Admin APIs (10 endpoints)\n💳 Payment APIs (1 endpoint)\n🏠 Public/Utility APIs (4 endpoints)\n\nTotal: 67+ endpoints\n\nEnvironment Variables Required:\n- base_url: http://localhost:8080\n- phone: +1234567890\n- otp_code: (dynamic)\n- trip_id: (dynamic)\n- user_id: (dynamic)\n- driver_jwt_token: (dynamic)\n- showroom_admin_jwt: (dynamic)\n- super_admin_jwt: (dynamic)\n- driver_admin_jwt: (dynamic)\n- customer_jwt_token: (dynamic)\n- driver_id: (dynamic)\n- showroom_id: (dynamic)\n- ride_id: (dynamic)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Send OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"OTP sent successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.equal(\"OTP sent\");",
                  "    if (response.otp) {",
                  "        pm.environment.set(\"otp_code\", response.otp);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"{{phone}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/send-otp",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "send-otp"]
            }
          }
        },
        {
          "name": "Verify OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"OTP verified\", function () {",
                  "    const response = pm.response.json();",
                  "    if (!response.isNewUser && response.user) {",
                  "        pm.environment.set(\"user_id\", response.user.id);",
                  "    }",
                  "    if (response.token) {",
                  "        pm.environment.set(\"customer_jwt_token\", response.token);",
                  "    }",
                  "});",
                  "",
                  "// Test JWT cookies are set for existing users",
                  "pm.test(\"JWT cookies are set (if existing user)\", function () {",
                  "    const response = pm.response.json();",
                  "    if (!response.isNewUser && response.user) {",
                  "        const setCookieHeaders = pm.response.headers.all().filter(h => h.key.toLowerCase() === 'set-cookie');",
                  "        const allCookies = setCookieHeaders.map(h => h.value).join('; ');",
                  "        pm.expect(allCookies).to.contain(\"access_token\");",
                  "        pm.expect(allCookies).to.contain(\"refresh_token\");",
                  "        pm.expect(allCookies).to.contain(\"HttpOnly\");",
                  "        pm.expect(allCookies).to.contain(\"SameSite=Strict\");",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"{{phone}}\",\n  \"otp\": \"{{otp_code}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/verify-otp",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Complete Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Profile created\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"user_id\", response.id);",
                  "    if (response.token) {",
                  "        pm.environment.set(\"customer_jwt_token\", response.token);",
                  "    }",
                  "});",
                  "",
                  "// Test JWT cookies are set",
                  "pm.test(\"JWT cookies are set with security options\", function () {",
                  "    const setCookieHeaders = pm.response.headers.all().filter(h => h.key.toLowerCase() === 'set-cookie');",
                  "    const allCookies = setCookieHeaders.map(h => h.value).join('; ');",
                  "    pm.expect(allCookies).to.contain(\"access_token\");",
                  "    pm.expect(allCookies).to.contain(\"refresh_token\");",
                  "    pm.expect(allCookies).to.contain(\"HttpOnly\");",
                  "    pm.expect(allCookies).to.contain(\"SameSite=Strict\");",
                  "    pm.expect(allCookies).to.contain(\"Max-Age=86400\"); // 24 hours",
                  "});",
                  "",
                  "// Test JWT tokens in response body",
                  "pm.test(\"JWT tokens included in response\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"token\");",
                  "    pm.expect(response).to.have.property(\"refreshToken\");",
                  "    pm.expect(response.token).to.be.a(\"string\").and.not.empty;",
                  "    pm.expect(response.refreshToken).to.be.a(\"string\").and.not.empty;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"{{phone}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/complete-profile",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "complete-profile"]
            }
          }
        },
        {
          "name": "Google Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Google login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property(\"token\");",
                  "    pm.expect(response).to.have.property(\"user\");",
                  "});",
                  "",
                  "// Test cookies are set",
                  "pm.test(\"JWT cookies set for Google login\", function () {",
                  "    const setCookieHeaders = pm.response.headers.all().filter(h => h.key.toLowerCase() === 'set-cookie');",
                  "    const allCookies = setCookieHeaders.map(h => h.value).join('; ');",
                  "    pm.expect(allCookies).to.contain(\"access_token\");",
                  "    pm.expect(allCookies).to.contain(\"HttpOnly\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idToken\": \"your-google-id-token\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/google",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "google"]
            }
          }
        },
        {
          "name": "Get Current User (Cookie Auth)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User info retrieved via cookies\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.user).to.have.property(\"id\");",
                  "    pm.expect(response.user).to.have.property(\"email\");",
                  "    pm.expect(response.user).to.have.property(\"fullName\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Test cookie-based authentication - cookies sent automatically"
          }
        },
        {
          "name": "Get Current User (Bearer Token)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User info retrieved via Bearer token\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.user).to.have.property(\"id\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer_jwt_token}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Test Bearer token authentication fallback"
          }
        },
        {
          "name": "Refresh JWT Tokens",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Tokens refreshed successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.message).to.contain(\"refreshed\");",
                  "});",
                  "",
                  "// Test new cookies are set",
                  "pm.test(\"New JWT cookies are set\", function () {",
                  "    const setCookieHeaders = pm.response.headers.all().filter(h => h.key.toLowerCase() === 'set-cookie');",
                  "    const allCookies = setCookieHeaders.map(h => h.value).join('; ');",
                  "    pm.expect(allCookies).to.contain(\"access_token\");",
                  "    pm.expect(allCookies).to.contain(\"refresh_token\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            },
            "description": "Refresh tokens using refresh_token cookie"
          }
        },
        {
          "name": "Logout (Clear Cookies)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Logout successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.contain(\"Logged out\");",
                  "});",
                  "",
                  "// Test cookies are cleared",
                  "pm.test(\"JWT cookies are cleared\", function () {",
                  "    const setCookieHeaders = pm.response.headers.all().filter(h => h.key.toLowerCase() === 'set-cookie');",
                  "    if (setCookieHeaders.length > 0) {",
                  "        const allCookies = setCookieHeaders.map(h => h.value).join('; ');",
                  "        pm.expect(allCookies).to.contain(\"Max-Age=0\"); // Cookies expired",
                  "    }",
                  "});",
                  "",
                  "// Clear environment variables",
                  "pm.environment.unset(\"customer_jwt_token\");",
                  "pm.environment.unset(\"user_id\");"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout and clear all JWT cookies"
          }
        },
        {
          "name": "Test Docs (Health Check)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"API health check\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.equal(\"working\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/test-docs",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "test-docs"]
            }
          }
        }
      ]
    },
    {
      "name": "🚗 Ride Management",
      "item": [
        {
          "name": "Get Ride Estimate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Estimates returned\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an(\"array\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"pickup\": {\n    \"latitude\": 12.9716,\n    \"longitude\": 77.5946,\n    \"address\": \"Bangalore Palace\"\n  },\n  \"destination\": {\n    \"latitude\": 12.2958,\n    \"longitude\": 76.6394,\n    \"address\": \"Mysore Palace\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/rides/estimate",
              "host": ["{{base_url}}"],
              "path": ["api", "rides", "estimate"]
            }
          }
        },
        {
          "name": "Book Ride",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ride booked\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"trip_id\", response.id);",
                  "    pm.environment.set(\"ride_id\", response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"pickup\": {\n    \"latitude\": 12.9716,\n    \"longitude\": 77.5946,\n    \"address\": \"Bangalore Palace\"\n  },\n  \"destination\": {\n    \"latitude\": 12.2958,\n    \"longitude\": 76.6394,\n    \"address\": \"Mysore Palace\"\n  },\n  \"rideOption\": {\n    \"id\": \"oems-sedan\",\n    \"name\": \"OEMS Sedan\",\n    \"type\": \"Sedan\",\n    \"price\": 180,\n    \"eta\": 5,\n    \"capacity\": 4\n  },\n  \"paymentMethod\": \"card\",\n  \"userPhone\": \"{{phone}}\",\n  \"userName\": \"John Doe\",\n  \"userEmail\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/rides/book",
              "host": ["{{base_url}}"],
              "path": ["api", "rides", "book"]
            }
          }
        },
        {
          "name": "Get Ride Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/rides/{{trip_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "rides", "{{trip_id}}"]
            }
          }
        },
        {
          "name": "Cancel Ride",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/rides/{{trip_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["api", "rides", "{{trip_id}}", "cancel"]
            }
          }
        }
      ]
    },
    {
      "name": "🚙 Driver APIs",
      "item": [
        {
          "name": "Driver Dashboard",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "dashboard"]
            },
            "description": "Get driver dashboard with active rides, earnings, and statistics"
          }
        },
        {
          "name": "Get Driver Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "profile"]
            }
          }
        },
        {
          "name": "Update Driver Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"John Driver Updated\",\n  \"email\": \"john.driver@example.com\",\n  \"vehicleModel\": \"Toyota Camry\",\n  \"vehicleNumber\": \"KA01AB1234\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "profile"]
            }
          }
        },
        {
          "name": "Update Driver Status",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"AVAILABLE\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver/status",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "status"]
            },
            "description": "Set driver status: AVAILABLE, BUSY, OFFLINE"
          }
        },
        {
          "name": "Update Driver Location",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"latitude\": 12.9716,\n  \"longitude\": 77.5946,\n  \"heading\": 45.0,\n  \"speed\": 30.5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver/location",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "location"]
            }
          }
        },
        {
          "name": "Get Ride Requests",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/ride-requests?status=PENDING&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "ride-requests"],
              "query": [
                { "key": "status", "value": "PENDING" },
                { "key": "limit", "value": "10" }
              ]
            }
          }
        },
        {
          "name": "Accept Ride",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/rides/{{ride_id}}/accept",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "rides", "{{ride_id}}", "accept"]
            }
          }
        },
        {
          "name": "Reject Ride",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Too far from pickup location\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver/rides/{{ride_id}}/reject",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "rides", "{{ride_id}}", "reject"]
            }
          }
        },
        {
          "name": "Start Ride",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/rides/{{ride_id}}/start",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "rides", "{{ride_id}}", "start"]
            }
          }
        },
        {
          "name": "Complete Ride",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"finalAmount\": 180.50,\n  \"odometerReading\": 12345.6\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver/rides/{{ride_id}}/complete",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "rides", "{{ride_id}}", "complete"]
            }
          }
        },
        {
          "name": "Cancel Ride (Driver)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Customer no-show\",\n  \"cancellationFee\": 50.0\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver/rides/{{ride_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "rides", "{{ride_id}}", "cancel"]
            }
          }
        },
        {
          "name": "Get Trip History",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/trips?page=0&size=20&status=COMPLETED",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "trips"],
              "query": [
                { "key": "page", "value": "0" },
                { "key": "size", "value": "20" },
                { "key": "status", "value": "COMPLETED" }
              ]
            }
          }
        },
        {
          "name": "Get Trip Details",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/trips/{{trip_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "trips", "{{trip_id}}"]
            }
          }
        },
        {
          "name": "Get Earnings",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/earnings?period=WEEKLY",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "earnings"],
              "query": [{ "key": "period", "value": "WEEKLY" }]
            }
          }
        },
        {
          "name": "Get Performance Metrics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/performance?period=MONTHLY",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "performance"],
              "query": [{ "key": "period", "value": "MONTHLY" }]
            }
          }
        },
        {
          "name": "Get Notifications",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_jwt_token}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver/notifications?unreadOnly=true&limit=50",
              "host": ["{{base_url}}"],
              "path": ["api", "driver", "notifications"],
              "query": [
                { "key": "unreadOnly", "value": "true" },
                { "key": "limit", "value": "50" }
              ]
            }
          }
        }
      ],
      "description": "Driver app APIs for ride management, location tracking, and earnings"
    },
    {
      "name": "🏢 Showroom Admin APIs",
      "item": [
        {
          "name": "Showroom Admin Dashboard",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "dashboard"]
            }
          }
        },
        {
          "name": "List Drivers",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/drivers?status=ACTIVE&page=0&size=20",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "drivers"],
              "query": [
                { "key": "status", "value": "ACTIVE" },
                { "key": "page", "value": "0" },
                { "key": "size", "value": "20" }
              ]
            }
          }
        },
        {
          "name": "Add Driver",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"New Driver\",\n  \"phoneNumber\": \"+919876543210\",\n  \"email\": \"driver@showroom.com\",\n  \"licenseNumber\": \"DL1234567890\",\n  \"vehicleType\": \"Sedan\",\n  \"vehicleNumber\": \"KA01CD5678\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/drivers",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "drivers"]
            }
          }
        },
        {
          "name": "Update Driver",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"ACTIVE\",\n  \"vehicleNumber\": \"KA01CD5678\",\n  \"rating\": 4.5\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/drivers/{{driver_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "drivers", "{{driver_id}}"]
            }
          }
        },
        {
          "name": "List Vehicles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/vehicles?status=ACTIVE&type=Sedan",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "vehicles"],
              "query": [
                { "key": "status", "value": "ACTIVE" },
                { "key": "type", "value": "Sedan" }
              ]
            }
          }
        },
        {
          "name": "Add Vehicle",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"make\": \"Toyota\",\n  \"model\": \"Camry\",\n  \"year\": 2024,\n  \"registrationNumber\": \"KA01EF1234\",\n  \"type\": \"Sedan\",\n  \"color\": \"Black\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/vehicles",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "vehicles"]
            }
          }
        },
        {
          "name": "Monitor Rides",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/rides?status=ACTIVE",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "rides"],
              "query": [{ "key": "status", "value": "ACTIVE" }]
            }
          }
        },
        {
          "name": "Get Analytics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/analytics?period=MONTHLY&metric=revenue",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "analytics"],
              "query": [
                { "key": "period", "value": "MONTHLY" },
                { "key": "metric", "value": "revenue" }
              ]
            }
          }
        },
        {
          "name": "Get Showroom Details",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/showroom",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "showroom"]
            }
          }
        },
        {
          "name": "Update Showroom Settings",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"operatingHours\": \"06:00-23:00\",\n  \"commissionRate\": 15.0,\n  \"contactEmail\": \"showroom@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/showroom/settings",
              "host": ["{{base_url}}"],
              "path": ["api", "showroom-admin", "showroom", "settings"]
            }
          }
        },
        {
          "name": "Driver Performance Report",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{showroom_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/showroom-admin/reports/driver-performance?period=MONTHLY",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "showroom-admin",
                "reports",
                "driver-performance"
              ],
              "query": [{ "key": "period", "value": "MONTHLY" }]
            }
          }
        }
      ],
      "description": "Showroom admin APIs for driver and vehicle fleet management"
    },
    {
      "name": "👑 Super Admin APIs",
      "item": [
        {
          "name": "Super Admin Dashboard",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "dashboard"]
            }
          }
        },
        {
          "name": "List All Users",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/users?role=DRIVER&status=ACTIVE&page=0&size=50",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "users"],
              "query": [
                { "key": "role", "value": "DRIVER" },
                { "key": "status", "value": "ACTIVE" },
                { "key": "page", "value": "0" },
                { "key": "size", "value": "50" }
              ]
            }
          }
        },
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User creation response\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    // If user creation returns an ID, use it; otherwise use a test UUID",
                  "    if (response.id || response.userId) {",
                  "        pm.environment.set(\"admin_test_user_id\", response.id || response.userId);",
                  "    } else {",
                  "        // Set a test UUID for the following operations",
                  "        pm.environment.set(\"admin_test_user_id\", \"123e4567-e89b-12d3-a456-426614174000\");",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"New User\",\n  \"phoneNumber\": \"+919876543210\",\n  \"email\": \"user@platform.com\",\n  \"role\": \"SHOWROOM_ADMIN\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/super-admin/users",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "users"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"ACTIVE\",\n  \"role\": \"DRIVER\",\n  \"verificationStatus\": \"VERIFIED\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/super-admin/users/{{admin_test_user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "users", "{{admin_test_user_id}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/users/{{admin_test_user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "users", "{{admin_test_user_id}}"]
            }
          }
        },
        {
          "name": "List All Showrooms",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/showrooms?status=ACTIVE&city=Bangalore",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "showrooms"],
              "query": [
                { "key": "status", "value": "ACTIVE" },
                { "key": "city", "value": "Bangalore" }
              ]
            }
          }
        },
        {
          "name": "Create Showroom",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set(\"showroom_id\", response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Downtown Showroom\",\n  \"address\": \"123 Main Street, Bangalore\",\n  \"latitude\": 12.9716,\n  \"longitude\": 77.5946,\n  \"city\": \"Bangalore\",\n  \"state\": \"Karnataka\",\n  \"contactPhone\": \"+919876543210\",\n  \"contactEmail\": \"downtown@showroom.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/super-admin/showrooms",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "showrooms"]
            }
          }
        },
        {
          "name": "Update Showroom",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"ACTIVE\",\n  \"commissionRate\": 20.0,\n  \"operatingHours\": \"24/7\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/super-admin/showrooms/{{showroom_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "showrooms", "{{showroom_id}}"]
            }
          }
        },
        {
          "name": "List Showroom Admins",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/admins?showroomId={{showroom_id}}&status=ACTIVE",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "admins"],
              "query": [
                { "key": "showroomId", "value": "{{showroom_id}}" },
                { "key": "status", "value": "ACTIVE" }
              ]
            }
          }
        },
        {
          "name": "Assign Admin to Showroom",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"canManageDrivers\": true,\n  \"canManageVehicles\": true,\n  \"canViewAnalytics\": true,\n  \"canManageRides\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/super-admin/showrooms/{{showroom_id}}/admins",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "super-admin",
                "showrooms",
                "{{showroom_id}}",
                "admins"
              ]
            }
          }
        },
        {
          "name": "Platform Analytics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/analytics?period=QUARTERLY&metric=all",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "analytics"],
              "query": [
                { "key": "period", "value": "QUARTERLY" },
                { "key": "metric", "value": "all" }
              ]
            }
          }
        },
        {
          "name": "Financial Reports",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/financial-reports?period=MONTHLY&year=2025",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "financial-reports"],
              "query": [
                { "key": "period", "value": "MONTHLY" },
                { "key": "year", "value": "2025" }
              ]
            }
          }
        },
        {
          "name": "Get System Config",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/system/config",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "system", "config"]
            }
          }
        },
        {
          "name": "Update System Config",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"platformCommission\": 10.0,\n  \"cancellationFee\": 50.0,\n  \"minimumRideAmount\": 100.0,\n  \"maxSearchRadius\": 10.0\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/super-admin/system/config",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "system", "config"]
            }
          }
        },
        {
          "name": "Audit Logs",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{super_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/super-admin/audit-logs?action=USER_CREATED&page=0&size=100",
              "host": ["{{base_url}}"],
              "path": ["api", "super-admin", "audit-logs"],
              "query": [
                { "key": "action", "value": "USER_CREATED" },
                { "key": "page", "value": "0" },
                { "key": "size", "value": "100" }
              ]
            }
          }
        }
      ],
      "description": "Super admin APIs for platform-wide management"
    },
    {
      "name": "🔧 Driver Admin APIs",
      "item": [
        {
          "name": "Driver Admin Dashboard",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "dashboard"]
            }
          }
        },
        {
          "name": "Performance Analytics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/analytics/performance?period=QUARTERLY",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "analytics", "performance"],
              "query": [{ "key": "period", "value": "QUARTERLY" }]
            }
          }
        },
        {
          "name": "Earnings Analytics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/analytics/earnings?period=YEARLY&breakdown=monthly",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "analytics", "earnings"],
              "query": [
                { "key": "period", "value": "YEARLY" },
                { "key": "breakdown", "value": "monthly" }
              ]
            }
          }
        },
        {
          "name": "Get Support Tickets",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/support/tickets?status=OPEN&priority=HIGH",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "support", "tickets"],
              "query": [
                { "key": "status", "value": "OPEN" },
                { "key": "priority", "value": "HIGH" }
              ]
            }
          }
        },
        {
          "name": "Create Support Ticket",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"subject\": \"Payment issue\",\n  \"description\": \"Not received payment for trip #12345\",\n  \"priority\": \"HIGH\",\n  \"category\": \"PAYMENT\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver-admin/support/tickets",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "support", "tickets"]
            }
          }
        },
        {
          "name": "Update Advanced Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bankAccountNumber\": \"1234567890\",\n  \"ifscCode\": \"SBIN0001234\",\n  \"panNumber\": \"ABCDE1234F\",\n  \"emergencyContact\": \"+919876543210\",\n  \"preferredWorkingHours\": \"06:00-22:00\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver-admin/profile/advanced",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "profile", "advanced"]
            }
          }
        },
        {
          "name": "View Fleet Statistics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/fleet",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "fleet"]
            }
          }
        },
        {
          "name": "Market Insights",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/market/insights?area=Bangalore&period=WEEKLY",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "market", "insights"],
              "query": [
                { "key": "area", "value": "Bangalore" },
                { "key": "period", "value": "WEEKLY" }
              ]
            }
          }
        },
        {
          "name": "Get Settings",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/driver-admin/settings",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "settings"]
            }
          }
        },
        {
          "name": "Update Settings",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [{ "key": "token", "value": "{{driver_admin_jwt}}" }]
            },
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationsEnabled\": true,\n  \"autoAcceptRides\": false,\n  \"maxRideDistance\": 50.0,\n  \"preferredRideTypes\": [\"Sedan\", \"SUV\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/driver-admin/settings",
              "host": ["{{base_url}}"],
              "path": ["api", "driver-admin", "settings"]
            }
          }
        }
      ],
      "description": "Driver admin APIs for advanced self-management features"
    },
    {
      "name": "💳 Payment",
      "item": [
        {
          "name": "Process Payment",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "X-User-Phone", "value": "{{phone}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 180,\n  \"currency\": \"INR\",\n  \"paymentMethod\": \"card\",\n  \"cardToken\": \"card_token_12345\",\n  \"tripId\": \"{{trip_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/payments/charge",
              "host": ["{{base_url}}"],
              "path": ["api", "payments", "charge"]
            }
          }
        }
      ]
    },
    {
      "name": "🏠 Public & Utility",
      "item": [
        {
          "name": "Welcome Page",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          }
        },
        {
          "name": "API Welcome",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/welcome",
              "host": ["{{base_url}}"],
              "path": ["api", "welcome"]
            }
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/health",
              "host": ["{{base_url}}"],
              "path": ["actuator", "health"]
            }
          }
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/swagger-ui.html",
              "host": ["{{base_url}}"],
              "path": ["swagger-ui.html"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "base_url", "value": "http://localhost:8080", "type": "string" },
    { "key": "phone", "value": "+1234567890", "type": "string" },
    { "key": "otp_code", "value": "123456", "type": "string" },
    { "key": "trip_id", "value": "", "type": "string" },
    { "key": "user_id", "value": "", "type": "string" },
    { "key": "driver_jwt_token", "value": "", "type": "string" },
    { "key": "showroom_admin_jwt", "value": "", "type": "string" },
    { "key": "super_admin_jwt", "value": "", "type": "string" },
    { "key": "driver_admin_jwt", "value": "", "type": "string" },
    { "key": "customer_jwt_token", "value": "", "type": "string" },
    { "key": "driver_id", "value": "", "type": "string" },
    { "key": "showroom_id", "value": "", "type": "string" },
    { "key": "ride_id", "value": "", "type": "string" }
  ]
}
